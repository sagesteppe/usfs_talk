title = 'herbaria consortia',
subtitle = "",
theme = theme(
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
)
ggsave('../results/ConsortiumByRegion.png', device = 'png', dpi = 150, units = "px",
width = 1920, height = 1080)
library(tigris)
library(tidyverse)
library(sf)
library(spData)
library(patchwork)
source('functions.R')
st <- states()  %>%
select(STUSPS, NAME)
xy <- data.frame(
x = c(-100.72, -100.67, -124.12, -125.31),
y = c(50.00, 30, 30, 50.00)
) %>%
st_as_sf(coords = c('x', 'y'), crs = 4269) %>%
st_union() %>%
st_cast('POLYGON') %>%
st_as_sf()
ak <- filter(st, NAME == 'Alaska')
il <- filter(us_states, NAME == 'Illinois') %>%
select(NAME) %>%
mutate(STUSPS = 'IL')
st_west <- st_crop(st, xy) %>%
bind_rows(., il) %>%
bind_rows(., ak) %>%
st_transform(4326)
rm(xy, ak, il, st)
################################################################################
###########        GRID OUT AND DIVIDE STATES INTO THREE SECTION        ########
################################################################################
# the grids will be divided into three groups per state, and clustered to make up
# to three bands of colors for the web resources
west <- filter(st_west, ! NAME %in% c('Alaska', 'Illinois'))
west_l <- split(west, west$NAME)
split_states <- lapply(west_l, state_splitter, pieces = 3) %>%
bind_rows()
ggplot() +
geom_sf(data = split_states, fill = NA)
ak <- filter(st_west, NAME == 'Alaska') %>%
st_transform(3338)
il <- filter(st_west, NAME == 'Illinois')
ak <- state_splitter(ak, pieces = 4)
il <- state_splitter(il, pieces = 3)
rm(west_l, state_splitter)
# now if the state has less than three sections reduce
websites <- data.frame(
website = c(
rep('Oregon Flora Image Project', 9),
rep('Burke Herbarium Image Collection', 4),
rep('Montana Natural Heritage Program', 6),
rep('Calflora-Calphotos', 3),
rep('Southwest CO Wildflowers', 4),
rep('SEINet', 7),
rep('American Southwest', 2),
'Illinois Wildflowers', 'Illinois Plants', 'Phytokeys',
'Alaska Wildflowers',
rep('US Wildflowers', 3)
),
state = c(
'OR', 'MT', 'ID', 'CA', 'NV', 'CO', 'WY', 'AK', 'UT', # OFIP
'WA', 'MT', 'ID', 'AK',  # BHIC
'MT', 'ID', 'WY', 'AK', 'ND', 'SD', # MTNHP
'CA', 'NV', 'AZ', # calflora
'CO', 'UT', 'WY', 'NM', # sw co wildflowers
'NM', 'NV', 'CA', 'UT', 'AZ', 'TX', 'CO', # SEINet
'AZ', 'NM', # american southwest
'IL', 'IL', 'IL',
'AK',
'NE', 'KS', 'OK'
)
) %>%
arrange(state) %>%
group_by(state) %>%
mutate(TEMPGRP = LETTERS[1:n()])
grps_b_state <- websites %>%
count(state)
split_states <- left_join(split_states, grps_b_state, by = c('STUSPS' =  'state')) %>%
mutate(TEMPGRP = if_else(n == 1,  'A', TEMPGRP)) %>%
select(-n) %>%
left_join(., websites, by = c('STUSPS' = 'state',  'TEMPGRP')) %>%
group_by(STUSPS, TEMPGRP) %>%
st_make_valid() %>%
mutate(geometry = st_union(geometry)) %>%
distinct()
il <- left_join(il, websites, by = c('STUSPS' = 'state',  'TEMPGRP')) %>%
st_make_valid() %>%
group_by(STUSPS, TEMPGRP) %>%
mutate(geometry = st_union(geometry)) %>%
distinct(STUSPS, TEMPGRP, .keep_all = T)
ak <- left_join(ak, websites, by = c('STUSPS' = 'state',  'TEMPGRP')) %>%
st_make_valid() %>%
group_by(STUSPS, TEMPGRP) %>%
mutate(geometry = st_union(geometry)) %>%
distinct(STUSPS, TEMPGRP, .keep_all = T)
rm(grps_b_state, websites, west, st_west)
################################################################################
#######                        COLOR PALETTES                           ########
################################################################################
web <- c('Oregon Flora Image Project', 'Burke Herbarium Image Collection',
'Montana Natural Heritage Program', 'Calflora-Calphotos', 'Southwest CO Wildflowers',
'SEINet', 'American Southwest', 'Illinois Wildflowers', 'Illinois Plants', 'Phytokeys',
'Alaska Wildflowers', 'US Wildflowers')
cols1 <- setNames(
c('#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462',
'#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f'),
web
)
rm(web)
################################################################################
######                           ALASKA PLOT                            ########
################################################################################
ak32 <- st_transform(ak, 3338)
akp <- ggplot() +
geom_sf(data = ak32, aes(fill = website)) +
scale_fill_manual(values = cols1) +
theme_void() +
theme(legend.position = 'none')
################################################################################
######                         ILLINOIS PLOT                            ########
################################################################################
ilp <- ggplot() +
geom_sf(data = il, aes(fill = website)) +
scale_fill_manual(values = cols1) +
theme_void() +
theme(legend.position = 'none')
################################################################################
#########                    WESTERN PLOTS                              ########
################################################################################
west <- ggplot() +
geom_sf(data = split_states, aes(fill = website)) +
scale_fill_manual(values = cols1) +
theme_void() +
theme(legend.position = 'none')
leg <- ggpubr::get_legend(
ggplot() +
geom_sf(data = split_states, aes(fill = website)) +
geom_sf(data = il, aes(fill = website)) +
geom_sf(data = ak, aes(fill = website)) +
scale_fill_manual('Plant Photo Websites', values = cols1) +
theme(legend.title.align = 0.5,
legend.spacing.x = unit(1, 'cm'),
legend.spacing.y = unit(0.4, 'cm')) +
guides(fill=guide_legend(ncol=3))
)
pw <- (ilp | akp | west) /
leg
pw + plot_annotation(
title = 'photo websites',
subtitle = "",
theme = theme(
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
)
ggsave('../results/WebsitesByState.png', device = 'png', dpi = 150, units = "px",
width = 1920, height = 1080)
rm(ilp, akp, west, leg, cols1, ak32, il, ak, split_states)
gc()
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
library(tidyverse)
library(kableExtra)
admin_floras <- data.frame(
flora = c(
'Jepson Manual 2nd', 'A Colorado Flora 2nd', 'Flora Neomexicana',
'Manual of Montana Vascular Plants 2nd', 'Vascular Plants of Wyoming', 'A Utah Flora 3rd',
'Vascular Flora of Illinois 4th', 'Flora of Oregon', 'Arizona Flora 2nd', 'Flora of Alaska'
),
authors = c(
'Baldwin, Goldman, Keil, Patterson, Wilken', 'Ackerfield', 'Allred',
'Lesica', 'Dorn', 'Welsh Atwood, Higgins, Goodrich',
'Mohlenbrock',  'Meyers, Jaster, Mitchell, Hardison, Harvey', 'Kearney, Peebles', 'Anderson, Welsh'
),
status = c(
'Current/Online', 'Current', 'Current',
'Current', 'Aging', 'Aging',
'Current', 'Current/not complete', 'Aged/not complete', 'Aged'
)
)
regional_floras <- data.frame(
flora = c(
'Intermountain Flora', 'Flora of the Pacific Northwest', 'Flora of the Great Plains',
'Uinta Flora', 'Flora of the Four Corners Region', 'Flora of Steens Mountain',
'Flora of the Chicago Region'
),
authors = c(
'Cronquist, Reveal, Holmgrens, Barneby', 'Hitchcock, Cronquist', 'Many',
'Goodrich, Huber', 'Heil, Kane, Reeves, Clifford', 'Mansfield',
'Wilhelm, Rericha'
),
status = c(
'Aged-Current', 'Current', 'Aging',
'Current', 'Current', 'Current',
'Current'
)
)
floras <- bind_rows(admin_floras, regional_floras) %>%
arrange(flora)
cols1 <- setNames(
c('#a6cee3','#1f78b4','#b2df8a',
'#33a02c','#fb9a99','#e31a1c',
'#fdbf6f','#ff7f00','#cab2d6',
'#6a3d9a','#C07F00','#b15928'),
c('Flora Neomexicana', 'Jepson Manual 2nd', 'Manual of Montana Vascular Plants 2nd',
'Flora of the Pacific Northwest', 'A Utah Flora 3rd', 'Vascular Plants of Wyoming',
'Intermountain Flora', 'A Colorado Flora 2nd', 'Flora of Oregon',
'Flora of Steens Mountain', 'Flora of the Great Plains', 'Arizona Flora 2nd')
)
cols2 <- setNames(
c('#434371', '#79AEA3', '#484041'),
c('Flora of the Chicago Region', 'Vascular Flora of Illinois 4th', 'Flora of Alaska')
)
cols3 <- setNames(
c('#CB8589', '#86836D'),
c('Uinta Flora', 'Flora of the Four Corners Region')
)
f_cols <- c(cols1, cols2, cols3)
rm(cols1, cols2, cols3, admin_floras, regional_floras)
# RColorBrewer::display.brewer.pal(6, "RdYlGn")
# RColorBrewer::brewer.pal(6, "RdYlGn")
stat_col <- floras %>%
mutate(Color = case_when(
status == 'Current/Online' ~ '#1A9641',
status ==  'Current' ~ '#91CF60',
status == 'Aged' ~ '#D7191C',
status %in% c('Aged-Current', 'Current/not complete') ~ '#D9EF8B',
.default =  '#FDAE61'
)) %>%
pull(Color)
floras %>%
mutate(across(.cols = everything(), ~ str_pad(.x, 10, "both"))) %>%
kbl(align = 'c', col.names = c('Flora', 'Author(s)', 'Status')) %>%
kable_paper(full_width = F) %>%
landscape(margin = c('1cm')) %>%
column_spec(1, background = f_cols, color = 'white') %>%
column_spec(3, background = stat_col, color = 'white') %>%
save_kable("test.pdf")
floras %>%
mutate(across(.cols = everything(), ~ str_pad(.x, 10, "both"))) %>%
kbl(align = 'c', col.names = c('Flora', 'Author(s)', 'Status')) %>%
kable_paper(full_width = F) %>%
landscape(margin = c('1cm')) %>%
column_spec(1, background = f_cols, color = 'white') %>%
column_spec(3, background = stat_col, color = 'white') %>%
save_kable("crazzzyname.pdf")
library(rpart)
library(rpart.plot)
library(randomForest)
library(GGally)
library(reprtree)
pal <- setNames(
c('#e41a1c', '#377eb8', '#4daf4a'),
c('versicolor', 'setosa', 'virginica')
)
#### Create the pairs plots
pairs <- ggpairs(iris, columns = 1:4, aes(color = Species, shape = Species),
upper = "blank", diag = "blank") +
scale_color_manual(values = pal) +
theme_bw()
pairs + plot_annotation(
title = 'screen prospective traits',
subtitle = "",
theme = theme(
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
)
pairs + plot_annotation(
title = 'screen prospective traits',
subtitle = "",
theme = theme(
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
)
#### Create the pairs plots
ggpairs(iris, columns = 1:4, aes(color = Species, shape = Species),
upper = "blank", diag = "blank") +
scale_color_manual(values = pal) +
theme_bw() +
labs(title = 'screen prospective traits', subtitle = "") +
theme(
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
ggsave('../results/Iris_Pairs.png', device = 'png', dpi = 150, units = "px",
width = 1920, height = 1080)
ggplot(iris) +
geom_point(aes(x = Petal.Length, y = Petal.Width,
color = Species, shape = Species), size = 3) +
scale_color_manual(values = pal) +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust = 0.5)) +
labs(title = 'Scatter plot of Petal Width and Sepal Length in Iris',
x = 'Petal length (cm)', y  = 'Petal Width (cm)') +
labs(title = 'evaluate useful traits', subtitle = "") +
theme(
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
ggsave('../results/Iris_Petal_Vars.png', device = 'png', dpi = 150, units = "px",
width = 1920, height = 1080)
ggplot(iris) +
geom_point(aes(x = Petal.Length, y = Petal.Width,
color = Species, shape = Species), size = 3) +
scale_color_manual(values = pal) +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust = 0.5)) +
labs(title = 'Scatter plot of Petal Width and Sepal Length in Iris',
x = 'Petal length (cm)', y  = 'Petal Width (cm)') +
geom_segment(x = 2.5, y = 0.1, xend = 2.5, yend = 2.5) +
annotate("text", label = "petal length >= 2.5 cm", x = 2.6, y = 1, size = 5,
angle = 90) +
labs(title = 'identify first split', subtitle = "") +
theme(
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
ggsave('../results/Iris_couplet1.png', device = 'png', dpi = 150, units = "px",
width = 1920, height = 1080)
ggplot(iris) +
geom_point(aes(x = Petal.Length, y = Petal.Width,
color = Species, shape = Species), size = 3) +
scale_color_manual(values = pal) +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust = 0.5)) +
labs(title = 'Scatter plot of Petal Width and Sepal Length in Iris',
x = 'Petal length (cm)', y  = 'Petal Width (cm)') +
geom_segment(x = 2.5, y = 0.1, xend = 2.5, yend = 2.5) +
annotate("text", label = "petal length >= 2.5 cm", x = 2.6, y = 1, size = 5,
angle = 90) +
geom_segment(x = 2.5, y = 1.8, xend = 8, yend = 1.8) +
annotate("text", label = "petal width >= 1.8 cm", x = 3.5, y = 1.85, size = 5)  +
labs(title = 'identify second split', subtitle = "") +
theme(
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
ggsave('../results/Iris_couplet2.png', device = 'png', dpi = 150, units = "px",
width = 1920, height = 1080)
png(filename = '../results/Iris_tree_key.png',
width = 960, height = 540, units = "px")
rpart.plot(iris_model_cart, type = 5, main="Main title")
iris_model_cart <- rpart(Species ~., data = iris)
rpart.plot(iris_model_cart, type = 5)
png(filename = '../results/Iris_tree_key.png',
width = 960, height = 540, units = "px")
rpart.plot(iris_model_cart, type = 5, main="Main title")
dev.off()
png(filename = '../results/Iris_tree_key.png',
width = 960, height = 540, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "Main title", family  = "sans serif")
dev.off()
png(filename = '../results/Iris_tree_key.png',
width = 960, height = 540, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "dichotomous key", family  = "sans serif")
dev.off()
png(filename = '../results/Iris_tree_key.png',
width = 960, height = 540, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "dichotomous key", family  = "sans serif", cex = 10)
dev.off()
png(filename = '../results/Iris_tree_key.png',
width = 960, height = 540, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "dichotomous key", family  = "sans serif", cex = 2)
dev.off()
png(filename = '../results/Iris_tree_key.png',
width = 1920, height = 1080, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "dichotomous key", family  = "sans serif", cex = 2)
dev.off()
png(filename = '../results/Iris_tree_key.png',
width = 1920, height = 1080, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "", font = , cex.main=5,family  = "sans serif", cex = 2)
png(filename = '../results/Iris_tree_key.png',
width = 1920, height = 1080, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "",  cex.main = 5, family  = "sans serif", cex = 2)
dev.off()
png(filename = '../results/Iris_tree_key.png',
width = 1920, height = 1080, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "",  cex.main = 10, family  = "sans serif", cex = 2)
dev.off()
1920 * 0.9
1080 * 0.9
png(filename = '../results/Iris_tree_key.png',
width = 1728, height = 972, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "", cex.main = 10, family  = "sans serif", cex = 2)
dev.off()
png(filename = '../results/Iris_tree_key.png',
width = 1728, height = 972, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "", cex.main = 10, cex = 2)
dev.off()
png(filename = '../results/Iris_tree_key-sans.png',
width = 1728, height = 972, units = "px")
rpart.plot(iris_model_cart, type = 5, main = "", cex.main = 10, family  = "sans serif", cex = 2)
dev.off()
rst division plot
ggplot(iris) +
geom_point(aes(x = Petal.Length, y = Petal.Width,
color = Species, shape = Species), size = 3) +
scale_color_manual(values = pal) +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust = 0.5)) +
labs(title = 'Scatter plot of Petal Width and Sepal Length in Iris',
x = 'Petal length (cm)', y  = 'Petal Width (cm)') +
geom_segment(x = 2.5, y = 0.1, xend = 2.5, yend = 2.5) +
annotate("text", label = "petal length >= 2.5 cm", x = 2.6, y = 1, size = 5,
angle = 90) +
labs(title = 'identify first split', subtitle = "") +
theme(
text = element_text(family = "sans serif"),
plot.title = element_text(size = 32, hjust = 0.5),
plot.subtitle = element_text(size = 22))
ggsave('../results/Iris_couplet1.png', device = 'png', dpi = 150, units = "px",
width = 1920, height = 1080)
#### Create the pairs plots
ggpairs(iris, columns = 1:4, aes(color = Species, shape = Species),
upper = "blank", diag = "blank") +
scale_color_manual(values = pal) +
theme_bw() +
labs(title = 'screen prospective traits', subtitle = "") +
theme(
text = element_text(family = "sans serif"),
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
ggsave('../results/Iris_Pairs.png', device = 'png', dpi = 150, units = "px",
width = 1920, height = 1080)
# first promising plot
ggplot(iris) +
geom_point(aes(x = Petal.Length, y = Petal.Width,
color = Species, shape = Species), size = 3) +
scale_color_manual(values = pal) +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust = 0.5)) +
labs(title = 'Scatter plot of Petal Width and Sepal Length in Iris',
x = 'Petal length (cm)', y  = 'Petal Width (cm)') +
labs(title = 'evaluate useful traits', subtitle = "") +
theme(
text = element_text(family = "sans serif"),
plot.title = element_text(size = 32, family = "sans serif", hjust = 0.5),
plot.subtitle = element_text(size = 22))
ggsave('../results/Iris_Petal_Vars.png', device = 'png', dpi = 150, units = "px",
width = 1920, height = 1080)
iris_model_rf <- randomForest(Species ~., data = iris, ntrees = 500, mtry = 3)
reprtree:::plot.getTree(iris_model_rf)
png(filename = '../results/Iris_tree_key2.png',
width = 960, height = 540, units = "px")
reprtree:::plot.getTree(iris_model_rf, type = 5, main = "", cex.main = 10, family  = "sans serif", cex = 2)
dev.off()
png(filename = '../results/Iris_tree_key2.png',
width = 960, height = 540, units = "px")
reprtree:::plot.getTree(iris_model_rf, main = "", cex.main = 10, family  = "sans serif", cex = 1)
dev.off()
png(filename = '../results/Iris_tree_key2.png',
width = 960, height = 540, units = "px")
reprtree:::plot.getTree(iris_model_rf, main = "", cex.main = 10, family  = "sans serif", cex = 1.5)
dev.off()
png(filename = '../results/Iris_tree_key2.png',
width = 1728, height = 972, units = "px")
reprtree:::plot.getTree(iris_model_rf, main = "", cex.main = 10, family  = "sans serif", cex = 1.5)
dev.off()
iris_model_rf <- forest(Species ~ ., data=iris, controls=cforest_control(mtry=2, mincriterion=0))
install.packages('party')
iris_model_rf <- party::forest(Species ~ ., data=iris, controls=cforest_control(mtry=2, mincriterion=0))
iris_model_rf <- forest(Species ~ ., data=iris, controls=cforest_control(mtry=2, mincriterion=0))
t <- getTree(iris_model_rf)
plto(t)
plot(t)
library("party")
cf <- cforest(Species ~ ., data = iris)
pt <- party:::prettytree(cf@ensemble[[1]], names(cf@data@get("input")))
pt
nt <- new("BinaryTree")
nt@tree <- pt
nt@data <- cf@data
nt@responses <- cf@responses
nt
plot(nt)
1920 * 0.5
1080 * 0.5
png(filename = '../results/Iris_tree_key2.png',
width = 960, height = 540, units = "px")
reprtree:::plot.getTree(iris_model_rf, family  = "sans serif", cex = 1.5)
dev.off()
png(filename = '../results/Iris_tree_key2.png',
width = 960, height = 540, units = "px")
reprtree:::plot.getTree(iris_model_rf, family  = "sans serif", cex = 1.1)
dev.off()
library(tidyverse)
library(colorbrewer)
library(RColorBrewer)
library(RcolorBrewer)
library(RColorBrewer)
display.brewer.pal(n, name, colorblindFriendly = T, type = "cont")
display.brewer.pal(n, name, colorblindFriendly = T, type = "cat")
display.brewer.pal(n = 6, name = "Greens", colorblindFriendly = T, type = "cat")
display.brewer.pal(n = 6, name = "Greens", colorblindFriendly = T, type = "qual")
display.brewer.pal(n = 6, name = "Greens")
display.brewer.pal(n = 6, name = "Greens")
brewer.pal(n = 6, name = "Greens")
display.brewer.all(n=NULL, type="all", select=NULL, exact.n=TRUE,
colorblindFriendly=FALSE)
display.brewer.all(n=NULL, type="all", select=NULL, exact.n=TRUE,
colorblindFriendly=FALSE)
display.brewer.pal(n = 6, name, colorblindFriendly = T, type = "cont")
library(RColorBrewer)
par(mar=c(3,4,2,2))
display.brewer.all()
